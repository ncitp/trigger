DBType: h2

server:
  port: 8000
  max-http-header-size: 100MB
  servlet:
    context-path: /
  compression:
    mime-types: text/html

spring:
  application:
    name: ydmis
  devtools:
    restart:
      enabled: true
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
  mvc:
    view:
      prefix: classpath:/templates
      suffix: .html
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:./database;auto_server=true;database_to_upper=false;
    username: sa
    password: sa
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 180000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  aop:
    auto: true
    proxy-target-class: true
  taskExecutor:
    # 核心线程数
    corePoolSize: 64
    # 最大线程数
    maxPoolSize: 128
    # 任务队列容量（阻塞队列）
    queueCapacity: 128
    # 允许核心线程超时
    allowCoreThreadTimeout: true
    # 线程空闲时间
    keepAliveTime: 30000
    # 设置线程池关闭的时候等待所有任务都完成再继续销毁其他的Bean
    waitForTasksToCompleteOnShutdown: false
    # 设置线程池中任务的等待时间，如果超过这个时候还没有销毁就强制销毁，以确保应用最后能够被关闭，而不是阻塞住
    AwaitTerminationSeconds: 10
    threadNamePrefix: "taskExecutor-"
  thymeleaf:
    #启用模板缓存
    cache: false
    #在呈现模板之前检查模板是否存在
    check-template: true
    # 检查模板位置是否存在
    check-template-location: false
    # Content-Type值
    servlet:
      content-type: text/html
    # 启用MVC Thymeleaf视图分辨率
    enabled: true
    # 模板编码
    encoding: UTF-8
    # 应该从解决方案中排除的视图名称的逗号分隔列表
    #excluded-view-names:
    # 应用于模板的模板模式
    mode: HTML
    # 在构建URL时预先查看名称的前缀
    prefix:
      classpath: /templates
    # 构建URL时附加到查看名称的后缀
    suffix: .html
    # 链中模板解析器的顺序
    #template-resolver-order:
    # 可以解析的视图名称的逗号分隔列表
    #view-names:
  web:
    resources:
      chain:
        strategy:
          content:
            enabled: true
            paths: /**
      static-locations:
        [ "classpath:/templates/","classpath:/static/"]

mybatis-plus:
  # MyBatis Mapper 所对应的 XML 文件位置
  # mapper-locations: classpath*:mapper/*.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，多个package用逗号或者分号分隔
  # 注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）
  typeAliasesPackage: com.ruqu.trigger.entity
  # 与 typeAliasesPackage 一起使用，仅扫描以该类作为父类的类
  # type-aliases-super-type: java.lang.Object
  # 配置扫描通用枚举,配置该属性，会对枚举类进行注入
  # typeEnumsPackage: org.ydesign.ydbs.entity
  configuration:
    # 使用驼峰法映射属性,配置这个resultType可以映射
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: false
    # 启动懒加载
    lazy-loading-enabled: true
    # false 为按需加载，可通过fetchType="eager"设置为立即加载
    aggressive-lazy-loading: false
    lazy-load-trigger-methods:
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"UUID";
    id-type: 0
    # 字段策略 0:"忽略判断",1:"非 NULL 判断",2:"非空判断"
    field-strategy: 2
    # 驼峰下划线转换
    db-column-underline: true
    # 数据库大写下划线转换
    capital-mode: true
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
    db-config:
      # 配置表明前缀，例如表设计时表名为tb_manager，对应entity为Manager
      table-prefix: rq_
      # 逻辑删除全局字段 (默认无 设置会自动扫描实体字段)
      logic-delete-field: deleted
      # 逻辑删除全局值（默认 1、表示已删除）
      logic-delete-value: 1
      # 逻辑未删除全局值（默认 0、表示未删除）
      logic-not-delete-value: 0
      # 是否开启like查询，即对 stirng 字段是否使用 like，默认不开启
      #column-like: true